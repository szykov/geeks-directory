// <auto-generated />
using System;
using GeeksDirectory.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GeeksDirectory.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191201184241_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1");

            modelBuilder.Entity("GeeksDirectory.Data.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "b8eb90fa-e25a-43e1-a5b6-dadfc2bcf2a1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "53ae42e2-4ad3-4446-836a-8625977950f2",
                            Email = "sergey.zykov@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "SERGEY.ZYKOV@MAIL.SOME",
                            NormalizedUserName = "SERGEY.ZYKOV@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEFJOcWIDBxwPz1kXKAaNOiupRSh1U74gbDPn0v48bCGiqfHSZ0deHt6GGnGfyfVdvg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "50fab312-0dcb-41b5-8a22-7bbaecb48998",
                            TwoFactorEnabled = false,
                            UserName = "sergey.zykov@mail.some"
                        },
                        new
                        {
                            Id = "0a50dbc4-23b5-4e0d-b588-0a7a72df0ed1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "445c9227-f1ee-4afc-a7ca-8825998d9f19",
                            Email = "john.smith@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "JOHN.SMITH@MAIL.SOME",
                            NormalizedUserName = "JOHN.SMITH@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEP5T74YWhlFsYe82zDCz+PgSqy1zCUTaspZraeR7k6TADadEd7VzhT+AnbaxMviaoQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "11958558-5dcc-4f4f-a902-beff0a197a91",
                            TwoFactorEnabled = false,
                            UserName = "john.smith@mail.some"
                        },
                        new
                        {
                            Id = "3fa5371e-5d44-42c6-b71f-daf3d38b2c5b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "025fd647-48aa-40df-959f-dd2206ca403b",
                            Email = "ivan.ivanov@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "IVAN.IVANOV@MAIL.SOME",
                            NormalizedUserName = "IVAN.IVANOV@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEPM4LfL5RjrwWYRN4zdorkZRe/NUQdq9qcT8r3mGfS4vhER82J5V5bRaBQaBpZK4LA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f489f8d2-a595-4d16-a003-e5e9468db4b2",
                            TwoFactorEnabled = false,
                            UserName = "ivan.ivanov@mail.some"
                        },
                        new
                        {
                            Id = "8636b3d5-af78-4a6f-a773-c96404516ba5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6b3253bf-f1a2-4872-8a0b-4c890b076040",
                            Email = "dasha.egorova@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "DASHA.EGOROVA@MAIL.SOME",
                            NormalizedUserName = "DASHA.EGOROVA@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEBkiyHtHi25SXy0mHidkWY3niPJUiGvWUvBb5mmnrOo/M72OB+/oT4EMGUVoxU0I6g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2c63d790-6f82-47e8-b59d-cf3527220304",
                            TwoFactorEnabled = false,
                            UserName = "dasha.egorova@mail.some"
                        },
                        new
                        {
                            Id = "4f99f9b1-b054-455e-9daa-8f0592823568",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c73e15c6-8f59-4c3a-9bad-094bfd5a88e2",
                            Email = "andrey.vladimirov@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ANDREY.VLADIMIROV@MAIL.SOME",
                            NormalizedUserName = "ANDREY.VLADIMIROV@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEJd78oTPbYDH/Noy/RAzudSzowsxh2E/fz6VQUcm/VCAZS2+C9n/0cbc4YD1sPcEyg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3cd82a34-5c54-42ff-bf86-212289cdd9a6",
                            TwoFactorEnabled = false,
                            UserName = "andrey.vladimirov@mail.some"
                        },
                        new
                        {
                            Id = "b270427f-fc46-4fdc-b3d9-3bdc64364d0e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "893e49ac-efba-4edf-9fa1-b1e0640e6778",
                            Email = "violeta.kanygina@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "VIOLETA.KANYGINA@MAIL.SOME",
                            NormalizedUserName = "VIOLETA.KANYGINA@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEMh/BfZW3JI4UGOqIb/vrIjsXySZ88lh8+tHUzolnigXJUn/jfmbRwozs5Qn1F4y2w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2c061130-4afb-45ff-a086-b92e09d6fdc7",
                            TwoFactorEnabled = false,
                            UserName = "violeta.kanygina@mail.some"
                        },
                        new
                        {
                            Id = "dc440a63-da95-43b0-98aa-3f4c4ff2a053",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3813048d-46fc-41a3-a825-fe388b86784a",
                            Email = "arsenia.panova@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ARSENIA.PANOVA@MAIL.SOME",
                            NormalizedUserName = "ARSENIA.PANOVA@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEN3ivguiloLgGYCa4cjblDpcCCjXrtYsegY8YIb1gjzEgG4cMDqDIo6u4TjpbTVMBg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "189e7a34-548d-4695-a4d5-bcdbc27267a2",
                            TwoFactorEnabled = false,
                            UserName = "arsenia.panova@mail.some"
                        },
                        new
                        {
                            Id = "964fb987-c3d0-4a17-a417-fb7edce1e3aa",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fd3b8d27-fbca-41ed-abc6-a43e999c92a6",
                            Email = "radislav.barsov@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "RADISLAV.BARSOV@MAIL.SOME",
                            NormalizedUserName = "RADISLAV.BARSOV@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEIauw5UUtEvgmMwdwTscKypBMel3BkGVsd2uWZ4xa4WNDShHqoadEYY0yRj/WFiyUQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "06305173-3eb3-4810-8d81-951374d74ee6",
                            TwoFactorEnabled = false,
                            UserName = "radislav.barsov@mail.some"
                        },
                        new
                        {
                            Id = "46b27f3b-dca0-4b4a-8b2a-ab2b263c1171",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "18b017cd-55fd-4272-9107-868ba0528966",
                            Email = "vasya.alekseev@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "VASYA.ALEKSEEV@MAIL.SOME",
                            NormalizedUserName = "VASYA.ALEKSEEV@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAENn4XhcFf4Z82uw7x7WfHmL11xjAN2R7qZ/07qCaeTFdeJPJufRCLTJ7jGRlAHRTqw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a1ad1f33-b72a-4d0c-9323-5877a759a510",
                            TwoFactorEnabled = false,
                            UserName = "vasya.alekseev@mail.some"
                        },
                        new
                        {
                            Id = "1a206a7d-646f-4c48-8578-1d2e6a76df05",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4c635cac-9ce7-42c8-8425-dad3a461901a",
                            Email = "zlata.tretyakova@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ZLATA.TRETYAKOVA@MAIL.SOME",
                            NormalizedUserName = "ZLATA.TRETYAKOVA@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEDrTJxRcpaob0Vqwyy+qqwLF79ebFJabqtykgEb/Dagix+G+tvgC5NQMKbajJq40FA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c2bf281e-a8f0-4a78-ae74-6c8f2cca37e4",
                            TwoFactorEnabled = false,
                            UserName = "zlata.tretyakova@mail.some"
                        },
                        new
                        {
                            Id = "64642283-ef5f-4d48-9ef6-9a4e30b8332e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "21ef97f1-6ee3-48e4-a2c8-abed7b2c5646",
                            Email = "albert.archipov@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ALBERT.ARCHIPOV@MAIL.SOME",
                            NormalizedUserName = "ALBERT.ARCHIPOV@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEBvcbPzs+INVpoISXetfA9yeAqmkx30TN94v9lhzPHVYWo8/vfysr6mpIi5gMvMLxw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1ad798e8-6e8d-4eb0-b6d1-28334b4c626c",
                            TwoFactorEnabled = false,
                            UserName = "albert.archipov@mail.some"
                        },
                        new
                        {
                            Id = "bb88c60a-257e-4b84-9a07-45206ccb3aad",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4620a969-fa0c-40ad-9099-e5eda6d9543d",
                            Email = "zarina.uvarova@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ZARINA.UVAROVA@MAIL.SOME",
                            NormalizedUserName = "ZARINA.UVAROVA@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEIA6PUyFUh+KkPUjGNn1qhLI/p4iz2w7aprNzKn/rIRXpO4FFjbY9YMzrA+q/F0qmQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "509897ac-54f8-4ac1-84f2-0b0602c385a1",
                            TwoFactorEnabled = false,
                            UserName = "zarina.uvarova@mail.some"
                        },
                        new
                        {
                            Id = "ab9f49d7-f20a-4951-88db-f75fcded0fe9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "da569bb0-6588-449f-b48a-4aeccb4163d4",
                            Email = "nadezda.kolesnikova@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "NADEZDA.KOLESNIKOVA@MAIL.SOME",
                            NormalizedUserName = "NADEZDA.KOLESNIKOVA@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEHtP0SqXpMji7uj/y0+3/ixXqiC5UX1ESxENfPlY42f/FF5z+MSJgjB+QO0QWDEvRw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0e316fca-ccc0-4251-b788-f00061c39d82",
                            TwoFactorEnabled = false,
                            UserName = "nadezda.kolesnikova@mail.some"
                        },
                        new
                        {
                            Id = "8bd9b467-e47b-4720-ad89-6eda8d254f86",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c9af3c6c-094c-453c-8348-3e0a0b10116a",
                            Email = "alina.lazareva@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ALINA.LAZAREVA@MAIL.SOME",
                            NormalizedUserName = "ALINA.LAZAREVA@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEJX07poA2KPDV2ecJWo8WuviIZNgBTEq7Fn9j7WK+EKkw4ruxQtHoMM0nDqClByvwQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "97cf7fe8-28f1-472f-88f2-30e87a2ec31d",
                            TwoFactorEnabled = false,
                            UserName = "alina.lazareva@mail.some"
                        },
                        new
                        {
                            Id = "a020921d-a94e-4606-b090-dc96d12ffd95",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "386fb618-09cd-4aa3-94a9-182de6cb4399",
                            Email = "galena.volkova@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "GALENA.VOLKOVA@MAIL.SOME",
                            NormalizedUserName = "GALENA.VOLKOVA@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEBuzmCspwz8ReFc+EbWvJl7ctlDjUwwlfWUZi5lfXo8mhd9IZILpVJNBRcAXK4KMGw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f51e5d3d-2ff1-41dc-8ca3-96fb55f5d0f5",
                            TwoFactorEnabled = false,
                            UserName = "galena.volkova@mail.some"
                        },
                        new
                        {
                            Id = "83d419be-12fb-4c32-9079-44a6bf1f0086",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "854de076-873f-4414-a41a-e64fea5ea808",
                            Email = "vsevolod.lenin@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "VSEVOLOD.LENIN@MAIL.SOME",
                            NormalizedUserName = "VSEVOLOD.LENIN@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEHocgtCyNtWOVAevgko9mixi/7kIX3TxIqhGHhipc6KC62tQRSszD/zP6mQzQdYuQQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "94f8b08d-43fc-4e7d-9fa6-aa935abdcbed",
                            TwoFactorEnabled = false,
                            UserName = "vsevolod.lenin@mail.some"
                        },
                        new
                        {
                            Id = "dabe2f8b-5545-4572-8468-5febf3a15a09",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e4bb63da-bfa9-4e49-8515-e9a8fb327db7",
                            Email = "oskar.kapustin@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "OSKAR.KAPUSTIN@MAIL.SOME",
                            NormalizedUserName = "OSKAR.KAPUSTIN@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEEZRa6luSB5CfsyeOjXOS9FVxOUUH8uzdORS0EmOHu8+9SSehH7ng96tv1CbzCqeyQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f956aebe-0a4f-4304-b152-e9c2807146a4",
                            TwoFactorEnabled = false,
                            UserName = "oskar.kapustin@mail.some"
                        },
                        new
                        {
                            Id = "4da310b4-87bb-4690-90c8-bf437114ae8e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "994dc8ee-f0e4-4168-b05b-5cfbb84a0ab6",
                            Email = "vladimir.udin@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "VLADIMIR.UDIN@MAIL.SOME",
                            NormalizedUserName = "VLADIMIR.UDIN@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEDynd3qOyGfPCJ9yYY/JsQNohlVaXgwMXghlgndQxaoAq+EHjCoV8ap24Hd3Be8weQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "664e7b1a-3247-40ac-86a3-311400ba62a3",
                            TwoFactorEnabled = false,
                            UserName = "vladimir.udin@mail.some"
                        },
                        new
                        {
                            Id = "73ad683c-7127-4b43-bc6c-c9e2a086d4c1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9739baff-7f92-41da-bdfb-b01a980fce4e",
                            Email = "lubov.orehova@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "LUBOV.OREHOVA@MAIL.SOME",
                            NormalizedUserName = "LUBOV.OREHOVA@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAENQrnI46H9uG/PumI5qooDbmDdoUizdOvr6Il2blfW70BXRBo41iJMfzXT3PWSbcxw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "320d15f5-b0f6-4ff7-a850-3164a537688e",
                            TwoFactorEnabled = false,
                            UserName = "lubov.orehova@mail.some"
                        },
                        new
                        {
                            Id = "ae8f195d-426c-45b3-8f56-17ef57fd3148",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cbb6c9d3-4a10-4588-b0ed-ff6c89ae33ad",
                            Email = "vlada.lipnitskaya@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "VLADA.LIPNITSKAYA@MAIL.SOME",
                            NormalizedUserName = "VLADA.LIPNITSKAYA@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAED4i9f3wspejcsiZ28ror9uaM6tbzaB0msSzrvF/WP2gZVA8y+XO7sYE+xYfB+OEhQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7d3cd5ae-83e2-4701-90c0-fbbd2ea9c4c4",
                            TwoFactorEnabled = false,
                            UserName = "vlada.lipnitskaya@mail.some"
                        },
                        new
                        {
                            Id = "f61dd9a6-49ee-4c40-ae5a-9b6b9122a38e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ba9c034f-8187-4d19-8b8f-fd2641212ecb",
                            Email = "polina.davydova@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "POLINA.DAVYDOVA@MAIL.SOME",
                            NormalizedUserName = "POLINA.DAVYDOVA@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEIW90HbeQJi0WNTsrA4pTApfG/+XdEbEq00Renk56Cqm4P8+osBIk6YQEq1FDENtDg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4e09d16d-4a81-481f-b0e8-e4db9519b5f6",
                            TwoFactorEnabled = false,
                            UserName = "polina.davydova@mail.some"
                        },
                        new
                        {
                            Id = "d5a53242-1c53-42dd-8833-a5072b367d80",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b2dc676c-6e9a-4ebf-be19-fd3fd258577e",
                            Email = "vanera.ryabova@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "VANERA.RYABOVA@MAIL.SOME",
                            NormalizedUserName = "VANERA.RYABOVA@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEJq2M15jxvpkj2oPUrOq+cpr2EzE3XtCTGskOuxai/c76MGk4qR5izw1AzJt+ZGafA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cc16e08b-9815-4b9e-ac2f-e84acebff20b",
                            TwoFactorEnabled = false,
                            UserName = "vanera.ryabova@mail.some"
                        },
                        new
                        {
                            Id = "98d7661f-19ac-4909-bf20-e700dd07c19a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d282a08d-933e-4b1d-9bdf-8225e43c8e30",
                            Email = "anjela.trofimova@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ANJELA.TROFIMOVA@MAIL.SOME",
                            NormalizedUserName = "ANJELA.TROFIMOVA@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEA+A49xZ3DB0Mo0ZBPbAcEQMM+IQUtqgTLCmKJZjz0eDjkMqYdI1z8e/Hg2minqE4A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c210d836-9c4b-468a-a35b-44a1a329a0bb",
                            TwoFactorEnabled = false,
                            UserName = "anjela.trofimova@mail.some"
                        },
                        new
                        {
                            Id = "511a47e8-9c86-4ce7-996f-9e1a72b53e69",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "aa5aa64e-cdf4-4d54-8e53-adc0e27e7116",
                            Email = "oskar.davtyan@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "OSKAR.DAVTYAN@MAIL.SOME",
                            NormalizedUserName = "OSKAR.DAVTYAN@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEEmrCGAcLZXmYsegNexg+goKO7rlkZYlnvovZwsxvy/31dQR4Nn8Fy3jWuOC9W838A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b86f9444-539f-4f96-88f4-a8adde2d5068",
                            TwoFactorEnabled = false,
                            UserName = "oskar.davtyan@mail.some"
                        },
                        new
                        {
                            Id = "e30e2446-ad11-46d6-bc13-68097fae0440",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fd282b38-1adf-4d55-9b0e-53dc48a33275",
                            Email = "nikolay.borisov@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "NIKOLAY.BORISOV@MAIL.SOME",
                            NormalizedUserName = "NIKOLAY.BORISOV@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEE13sdahytRk4hZftmrzacGnpJI1MJx/7B2Ri4u76LzPJAqyvNWNCPj7pONiw3KKSw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "13ceead8-f1c9-4890-afc7-835666ffe382",
                            TwoFactorEnabled = false,
                            UserName = "nikolay.borisov@mail.some"
                        },
                        new
                        {
                            Id = "a728faec-b5c7-41f4-bd56-162a897ff46f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6cc40430-ad76-4a26-b2a9-e0a701864709",
                            Email = "donat.latykin@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "DONAT.LATYKIN@MAIL.SOME",
                            NormalizedUserName = "DONAT.LATYKIN@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEGbzbu+JJsimUIaXIBR4CR0Q5yiAPzVu2yjhMLstxNY0weZUANXxe/aiVGW1Rctq0g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3de53798-7436-4ecd-8974-f6116a8e2e52",
                            TwoFactorEnabled = false,
                            UserName = "donat.latykin@mail.some"
                        },
                        new
                        {
                            Id = "b1091cd4-d605-480b-aa23-6f49df0e53ad",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fadbbdb4-a7fa-4bde-90c2-d42e5539e008",
                            Email = "maksim.kuzmin@mail.some",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "MAKSIM.KUZMIN@MAIL.SOME",
                            NormalizedUserName = "MAKSIM.KUZMIN@MAIL.SOME",
                            PasswordHash = "AQAAAAEAACcQAAAAEHSecoCwkNcK80gtW+pTJU4K0wvQEdLGn7HZhLe89mMr2Z8R0rE7w0S6XW17o5iW8w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7ae2ec8a-9867-48ce-bde4-a85ac02b495f",
                            TwoFactorEnabled = false,
                            UserName = "maksim.kuzmin@mail.some"
                        });
                });

            modelBuilder.Entity("GeeksDirectory.Data.Entities.Assessment", b =>
                {
                    b.Property<int>("AssessmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("AssessmentId");

                    b.HasIndex("SkillId");

                    b.HasIndex("UserName");

                    b.ToTable("Assessments");
                });

            modelBuilder.Entity("GeeksDirectory.Data.Entities.GeekProfile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("ProfileId");

                    b.HasIndex("UserName");

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            ProfileId = 1,
                            City = "Moscow",
                            Email = "sergey.zykov@mail.some",
                            Name = "Sergey",
                            Surname = "Zykov",
                            UserName = "b8eb90fa-e25a-43e1-a5b6-dadfc2bcf2a1"
                        },
                        new
                        {
                            ProfileId = 2,
                            City = "Ekaterinburg",
                            Email = "john.smith@mail.some",
                            Name = "John",
                            Surname = "Smith",
                            UserName = "0a50dbc4-23b5-4e0d-b588-0a7a72df0ed1"
                        },
                        new
                        {
                            ProfileId = 3,
                            City = "St. Petersburg",
                            Email = "ivan.ivanov@mail.some",
                            Name = "Ivan",
                            Surname = "Ivanov",
                            UserName = "3fa5371e-5d44-42c6-b71f-daf3d38b2c5b"
                        },
                        new
                        {
                            ProfileId = 4,
                            City = "Deport",
                            Email = "dasha.egorova@mail.some",
                            Name = "Dasha",
                            Surname = "Egorova",
                            UserName = "8636b3d5-af78-4a6f-a773-c96404516ba5"
                        },
                        new
                        {
                            ProfileId = 5,
                            City = "Landmark",
                            Email = "andrey.vladimirov@mail.some",
                            Name = "Andrey",
                            Surname = "Vladimirov",
                            UserName = "4f99f9b1-b054-455e-9daa-8f0592823568"
                        },
                        new
                        {
                            ProfileId = 6,
                            City = "New Preston",
                            Email = "violeta.kanygina@mail.some",
                            Name = "Violeta",
                            Surname = "Kanygina",
                            UserName = "b270427f-fc46-4fdc-b3d9-3bdc64364d0e"
                        },
                        new
                        {
                            ProfileId = 7,
                            City = "Dupree",
                            Email = "arsenia.panova@mail.some",
                            Name = "Arsenia",
                            Surname = "Panova",
                            UserName = "dc440a63-da95-43b0-98aa-3f4c4ff2a053"
                        },
                        new
                        {
                            ProfileId = 8,
                            City = "Kenton Vale",
                            Email = "radislav.barsov@mail.some",
                            Name = "Radislav",
                            Surname = "Barsov",
                            UserName = "964fb987-c3d0-4a17-a417-fb7edce1e3aa"
                        },
                        new
                        {
                            ProfileId = 9,
                            City = "Walnut Park",
                            Email = "vasya.alekseev@mail.some",
                            Name = "Vasya",
                            Surname = "Alekseev",
                            UserName = "46b27f3b-dca0-4b4a-8b2a-ab2b263c1171"
                        },
                        new
                        {
                            ProfileId = 10,
                            City = "Karaichev",
                            Email = "zlata.tretyakova@mail.some",
                            Name = "Zlata",
                            Surname = "Tretyakova",
                            UserName = "1a206a7d-646f-4c48-8578-1d2e6a76df05"
                        },
                        new
                        {
                            ProfileId = 11,
                            City = "Golitsyno",
                            Email = "albert.archipov@mail.some",
                            Name = "Albert",
                            Surname = "Archipov",
                            UserName = "64642283-ef5f-4d48-9ef6-9a4e30b8332e"
                        },
                        new
                        {
                            ProfileId = 12,
                            City = "Trostyanka",
                            Email = "zarina.uvarova@mail.some",
                            Name = "Zarina",
                            Surname = "Uvarova",
                            UserName = "bb88c60a-257e-4b84-9a07-45206ccb3aad"
                        },
                        new
                        {
                            ProfileId = 13,
                            City = "Stawropol",
                            Email = "nadezda.kolesnikova@mail.some",
                            Name = "Nadezda",
                            Surname = "Kolesnikova",
                            UserName = "ab9f49d7-f20a-4951-88db-f75fcded0fe9"
                        },
                        new
                        {
                            ProfileId = 14,
                            City = "Lykoshina",
                            Email = "alina.lazareva@mail.some",
                            Name = "Alina",
                            Surname = "Lazareva",
                            UserName = "8bd9b467-e47b-4720-ad89-6eda8d254f86"
                        },
                        new
                        {
                            ProfileId = 15,
                            City = "Agutino",
                            Email = "galena.volkova@mail.some",
                            Name = "Galena",
                            Surname = "Volkova",
                            UserName = "a020921d-a94e-4606-b090-dc96d12ffd95"
                        },
                        new
                        {
                            ProfileId = 16,
                            City = "Ungavitsa",
                            Email = "vsevolod.lenin@mail.some",
                            Name = "Vsevolod",
                            Surname = "Lenin",
                            UserName = "83d419be-12fb-4c32-9079-44a6bf1f0086"
                        },
                        new
                        {
                            ProfileId = 17,
                            City = "Shvedovo",
                            Email = "oskar.kapustin@mail.some",
                            Name = "Oskar",
                            Surname = "Kapustin",
                            UserName = "dabe2f8b-5545-4572-8468-5febf3a15a09"
                        },
                        new
                        {
                            ProfileId = 18,
                            City = "Skolkovo",
                            Email = "vladimir.udin@mail.some",
                            Name = "Vladimir",
                            Surname = "Udin",
                            UserName = "4da310b4-87bb-4690-90c8-bf437114ae8e"
                        },
                        new
                        {
                            ProfileId = 19,
                            City = "Ragozina",
                            Email = "lubov.orehova@mail.some",
                            Name = "Lubov",
                            Surname = "Orehova",
                            UserName = "73ad683c-7127-4b43-bc6c-c9e2a086d4c1"
                        },
                        new
                        {
                            ProfileId = 20,
                            City = "Nikitino",
                            Email = "vlada.lipnitskaya@mail.some",
                            Name = "Vlada",
                            Surname = "Lipnitskaya",
                            UserName = "ae8f195d-426c-45b3-8f56-17ef57fd3148"
                        },
                        new
                        {
                            ProfileId = 21,
                            City = "Aryntsas",
                            Email = "polina.davydova@mail.some",
                            Name = "Polina",
                            Surname = "Davydova",
                            UserName = "f61dd9a6-49ee-4c40-ae5a-9b6b9122a38e"
                        },
                        new
                        {
                            ProfileId = 22,
                            City = "Krutilovka",
                            Email = "vanera.ryabova@mail.some",
                            Name = "Vanera",
                            Surname = "Ryabova",
                            UserName = "d5a53242-1c53-42dd-8833-a5072b367d80"
                        },
                        new
                        {
                            ProfileId = 23,
                            City = "Khvatkovo",
                            Email = "anjela.trofimova@mail.some",
                            Name = "Anjela",
                            Surname = "Trofimova",
                            UserName = "98d7661f-19ac-4909-bf20-e700dd07c19a"
                        },
                        new
                        {
                            ProfileId = 24,
                            City = "Latoshinka",
                            Email = "oskar.davtyan@mail.some",
                            Name = "Oskar",
                            Surname = "Davtyan",
                            UserName = "511a47e8-9c86-4ce7-996f-9e1a72b53e69"
                        },
                        new
                        {
                            ProfileId = 25,
                            City = "Mikhaylovka",
                            Email = "nikolay.borisov@mail.some",
                            Name = "Nikolay",
                            Surname = "Borisov",
                            UserName = "e30e2446-ad11-46d6-bc13-68097fae0440"
                        },
                        new
                        {
                            ProfileId = 26,
                            City = "Nygda",
                            Email = "donat.latykin@mail.some",
                            Name = "Donat",
                            Surname = "Latykin",
                            UserName = "a728faec-b5c7-41f4-bd56-162a897ff46f"
                        },
                        new
                        {
                            ProfileId = 27,
                            City = "Taygach",
                            Email = "maksim.kuzmin@mail.some",
                            Name = "Maksim",
                            Surname = "Kuzmin",
                            UserName = "b1091cd4-d605-480b-aa23-6f49df0e53ad"
                        });
                });

            modelBuilder.Entity("GeeksDirectory.Data.Entities.Skill", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AverageScore")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProfileId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SkillId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            SkillId = 1,
                            AverageScore = 4,
                            Description = "Excepteur sint in culpa id est laborum.",
                            Name = "python",
                            ProfileId = 1
                        },
                        new
                        {
                            SkillId = 2,
                            AverageScore = 3,
                            Description = "Excepteur occaecat cupida proident, suntid est.",
                            Name = "cpp",
                            ProfileId = 1
                        },
                        new
                        {
                            SkillId = 3,
                            AverageScore = 3,
                            Description = "Quis autem vel eum iure repreherit in ea quam.",
                            Name = "php",
                            ProfileId = 1
                        },
                        new
                        {
                            SkillId = 4,
                            AverageScore = 4,
                            Description = "Nemo enim ipsam voptatem aut odit.",
                            Name = "swift",
                            ProfileId = 1
                        },
                        new
                        {
                            SkillId = 5,
                            AverageScore = 3,
                            Description = "Nemo enim ipsam voptatem aut odit.",
                            Name = "swift",
                            ProfileId = 2
                        },
                        new
                        {
                            SkillId = 6,
                            AverageScore = 4,
                            Description = "Excepteur sint cupitat, anim id est laborum.",
                            Name = "ruby",
                            ProfileId = 2
                        },
                        new
                        {
                            SkillId = 7,
                            AverageScore = 2,
                            Description = "Excepteur occaecat cupida proident, suntid est.",
                            Name = "cpp",
                            ProfileId = 3
                        },
                        new
                        {
                            SkillId = 8,
                            AverageScore = 3,
                            Description = "Quis autem vel eum iure repreherit in ea quam.",
                            Name = "php",
                            ProfileId = 3
                        },
                        new
                        {
                            SkillId = 9,
                            AverageScore = 4,
                            Description = "Nemo enim ipsam voptatem aut odit.",
                            Name = "swift",
                            ProfileId = 3
                        },
                        new
                        {
                            SkillId = 10,
                            AverageScore = 3,
                            Description = "Excepteur sint cupitat, anim id est laborum.",
                            Name = "ruby",
                            ProfileId = 3
                        },
                        new
                        {
                            SkillId = 11,
                            AverageScore = 0,
                            Description = "Excepteur sint in culpa id est laborum.",
                            Name = "python",
                            ProfileId = 4
                        },
                        new
                        {
                            SkillId = 12,
                            AverageScore = 1,
                            Description = "Excepteur occaecat cupida proident, suntid est.",
                            Name = "cpp",
                            ProfileId = 4
                        },
                        new
                        {
                            SkillId = 13,
                            AverageScore = 3,
                            Description = "Quis autem vel eum iure repreherit in ea quam.",
                            Name = "php",
                            ProfileId = 4
                        },
                        new
                        {
                            SkillId = 14,
                            AverageScore = 0,
                            Description = "Nemo enim ipsam voptatem aut odit.",
                            Name = "swift",
                            ProfileId = 4
                        },
                        new
                        {
                            SkillId = 15,
                            AverageScore = 1,
                            Description = "Quis autem eum iur velit esse quam.",
                            Name = "javascript",
                            ProfileId = 5
                        },
                        new
                        {
                            SkillId = 16,
                            AverageScore = 0,
                            Description = "Nemo enim sit aspernatur aut odit.",
                            Name = "angular",
                            ProfileId = 5
                        },
                        new
                        {
                            SkillId = 17,
                            AverageScore = 1,
                            Description = "Ut enim ad minima, exercitationem ullam.",
                            Name = "java",
                            ProfileId = 5
                        },
                        new
                        {
                            SkillId = 18,
                            AverageScore = 0,
                            Description = "Excepteur sint in culpa id est laborum.",
                            Name = "python",
                            ProfileId = 5
                        },
                        new
                        {
                            SkillId = 19,
                            AverageScore = 2,
                            Description = "Quis autem vel eum iure repreherit in ea quam.",
                            Name = "php",
                            ProfileId = 6
                        },
                        new
                        {
                            SkillId = 20,
                            AverageScore = 0,
                            Description = "Nemo enim ipsam voptatem aut odit.",
                            Name = "swift",
                            ProfileId = 6
                        },
                        new
                        {
                            SkillId = 21,
                            AverageScore = 0,
                            Description = "Excepteur sint cupitat, anim id est laborum.",
                            Name = "ruby",
                            ProfileId = 6
                        },
                        new
                        {
                            SkillId = 22,
                            AverageScore = 0,
                            Description = "Excepteur sint cupitat, anim id est laborum.",
                            Name = "ruby",
                            ProfileId = 7
                        },
                        new
                        {
                            SkillId = 23,
                            AverageScore = 2,
                            Description = "Quis autem eum iur velit esse quam.",
                            Name = "javascript",
                            ProfileId = 8
                        },
                        new
                        {
                            SkillId = 24,
                            AverageScore = 1,
                            Description = "Nemo enim ipsam voptatem aut odit.",
                            Name = "swift",
                            ProfileId = 9
                        },
                        new
                        {
                            SkillId = 25,
                            AverageScore = 3,
                            Description = "Excepteur sint cupitat, anim id est laborum.",
                            Name = "ruby",
                            ProfileId = 9
                        },
                        new
                        {
                            SkillId = 26,
                            AverageScore = 2,
                            Description = "Excepteur occaecat cupida proident, suntid est.",
                            Name = "cpp",
                            ProfileId = 10
                        },
                        new
                        {
                            SkillId = 27,
                            AverageScore = 4,
                            Description = "Quis autem vel eum iure repreherit in ea quam.",
                            Name = "php",
                            ProfileId = 10
                        },
                        new
                        {
                            SkillId = 28,
                            AverageScore = 3,
                            Description = "Excepteur occaecat cupida proident, suntid est.",
                            Name = "cpp",
                            ProfileId = 11
                        },
                        new
                        {
                            SkillId = 29,
                            AverageScore = 0,
                            Description = "Quis autem vel eum iure repreherit in ea quam.",
                            Name = "php",
                            ProfileId = 11
                        },
                        new
                        {
                            SkillId = 30,
                            AverageScore = 4,
                            Description = "Nemo enim ipsam voptatem aut odit.",
                            Name = "swift",
                            ProfileId = 11
                        },
                        new
                        {
                            SkillId = 31,
                            AverageScore = 3,
                            Description = "Excepteur sint in culpa id est laborum.",
                            Name = "python",
                            ProfileId = 12
                        },
                        new
                        {
                            SkillId = 32,
                            AverageScore = 2,
                            Description = "Excepteur occaecat cupida proident, suntid est.",
                            Name = "cpp",
                            ProfileId = 12
                        },
                        new
                        {
                            SkillId = 33,
                            AverageScore = 3,
                            Description = "Excepteur sint cupitat, anim id est laborum.",
                            Name = "ruby",
                            ProfileId = 13
                        },
                        new
                        {
                            SkillId = 34,
                            AverageScore = 0,
                            Description = "Excepteur occaecat cupida proident, suntid est.",
                            Name = "cpp",
                            ProfileId = 14
                        },
                        new
                        {
                            SkillId = 35,
                            AverageScore = 2,
                            Description = "Quis autem vel eum iure repreherit in ea quam.",
                            Name = "php",
                            ProfileId = 14
                        },
                        new
                        {
                            SkillId = 36,
                            AverageScore = 0,
                            Description = "Excepteur sint cupitat, anim id est laborum.",
                            Name = "ruby",
                            ProfileId = 15
                        },
                        new
                        {
                            SkillId = 37,
                            AverageScore = 0,
                            Description = "Quis autem vel eum iure repreherit in ea quam.",
                            Name = "php",
                            ProfileId = 16
                        },
                        new
                        {
                            SkillId = 38,
                            AverageScore = 4,
                            Description = "Nemo enim ipsam voptatem aut odit.",
                            Name = "swift",
                            ProfileId = 16
                        },
                        new
                        {
                            SkillId = 39,
                            AverageScore = 2,
                            Description = "Nemo enim sit aspernatur aut odit.",
                            Name = "angular",
                            ProfileId = 17
                        },
                        new
                        {
                            SkillId = 40,
                            AverageScore = 4,
                            Description = "Excepteur occaecat cupida proident, suntid est.",
                            Name = "cpp",
                            ProfileId = 18
                        },
                        new
                        {
                            SkillId = 41,
                            AverageScore = 4,
                            Description = "Quis autem vel eum iure repreherit in ea quam.",
                            Name = "php",
                            ProfileId = 18
                        },
                        new
                        {
                            SkillId = 42,
                            AverageScore = 2,
                            Description = "Nemo enim ipsam voptatem aut odit.",
                            Name = "swift",
                            ProfileId = 18
                        },
                        new
                        {
                            SkillId = 43,
                            AverageScore = 4,
                            Description = "Excepteur sint cupitat, anim id est laborum.",
                            Name = "ruby",
                            ProfileId = 18
                        },
                        new
                        {
                            SkillId = 44,
                            AverageScore = 1,
                            Description = "Quis autem vel eum iure repreherit in ea quam.",
                            Name = "php",
                            ProfileId = 19
                        },
                        new
                        {
                            SkillId = 45,
                            AverageScore = 1,
                            Description = "Nemo enim ipsam voptatem aut odit.",
                            Name = "swift",
                            ProfileId = 19
                        },
                        new
                        {
                            SkillId = 46,
                            AverageScore = 4,
                            Description = "Ut enim ad minima, exercitationem ullam.",
                            Name = "java",
                            ProfileId = 20
                        },
                        new
                        {
                            SkillId = 47,
                            AverageScore = 3,
                            Description = "Excepteur sint in culpa id est laborum.",
                            Name = "python",
                            ProfileId = 20
                        },
                        new
                        {
                            SkillId = 48,
                            AverageScore = 4,
                            Description = "Excepteur occaecat cupida proident, suntid est.",
                            Name = "cpp",
                            ProfileId = 20
                        },
                        new
                        {
                            SkillId = 49,
                            AverageScore = 4,
                            Description = "Nemo enim ipsam voptatem aut odit.",
                            Name = "swift",
                            ProfileId = 21
                        },
                        new
                        {
                            SkillId = 50,
                            AverageScore = 4,
                            Description = "Quis autem eum iur velit esse quam.",
                            Name = "javascript",
                            ProfileId = 22
                        },
                        new
                        {
                            SkillId = 51,
                            AverageScore = 1,
                            Description = "Nemo enim sit aspernatur aut odit.",
                            Name = "angular",
                            ProfileId = 22
                        },
                        new
                        {
                            SkillId = 52,
                            AverageScore = 3,
                            Description = "Ut enim ad minima, exercitationem ullam.",
                            Name = "java",
                            ProfileId = 22
                        },
                        new
                        {
                            SkillId = 53,
                            AverageScore = 4,
                            Description = "Excepteur sint cupitat, anim id est laborum.",
                            Name = "ruby",
                            ProfileId = 23
                        },
                        new
                        {
                            SkillId = 54,
                            AverageScore = 4,
                            Description = "Nemo enim sit aspernatur aut odit.",
                            Name = "angular",
                            ProfileId = 24
                        },
                        new
                        {
                            SkillId = 55,
                            AverageScore = 1,
                            Description = "Ut enim ad minima, exercitationem ullam.",
                            Name = "java",
                            ProfileId = 24
                        },
                        new
                        {
                            SkillId = 56,
                            AverageScore = 4,
                            Description = "Excepteur sint in culpa id est laborum.",
                            Name = "python",
                            ProfileId = 24
                        },
                        new
                        {
                            SkillId = 57,
                            AverageScore = 1,
                            Description = "Excepteur occaecat cupida proident, suntid est.",
                            Name = "cpp",
                            ProfileId = 24
                        },
                        new
                        {
                            SkillId = 58,
                            AverageScore = 2,
                            Description = "Quis autem vel eum iure repreherit in ea quam.",
                            Name = "php",
                            ProfileId = 24
                        },
                        new
                        {
                            SkillId = 59,
                            AverageScore = 0,
                            Description = "Excepteur occaecat cupida proident, suntid est.",
                            Name = "cpp",
                            ProfileId = 25
                        },
                        new
                        {
                            SkillId = 60,
                            AverageScore = 0,
                            Description = "Quis autem vel eum iure repreherit in ea quam.",
                            Name = "php",
                            ProfileId = 25
                        },
                        new
                        {
                            SkillId = 61,
                            AverageScore = 4,
                            Description = "Nemo enim ipsam voptatem aut odit.",
                            Name = "swift",
                            ProfileId = 25
                        },
                        new
                        {
                            SkillId = 62,
                            AverageScore = 4,
                            Description = "Excepteur sint cupitat, anim id est laborum.",
                            Name = "ruby",
                            ProfileId = 25
                        },
                        new
                        {
                            SkillId = 63,
                            AverageScore = 2,
                            Description = "Nemo enim ipsam voptatem aut odit.",
                            Name = "swift",
                            ProfileId = 26
                        },
                        new
                        {
                            SkillId = 64,
                            AverageScore = 0,
                            Description = "Excepteur sint cupitat, anim id est laborum.",
                            Name = "ruby",
                            ProfileId = 26
                        },
                        new
                        {
                            SkillId = 65,
                            AverageScore = 4,
                            Description = "Nemo enim sit aspernatur aut odit.",
                            Name = "angular",
                            ProfileId = 27
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("GeeksDirectory.Data.Entities.Assessment", b =>
                {
                    b.HasOne("GeeksDirectory.Data.Entities.Skill", "Skill")
                        .WithMany("Assessments")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GeeksDirectory.Data.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserName");
                });

            modelBuilder.Entity("GeeksDirectory.Data.Entities.GeekProfile", b =>
                {
                    b.HasOne("GeeksDirectory.Data.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserName");
                });

            modelBuilder.Entity("GeeksDirectory.Data.Entities.Skill", b =>
                {
                    b.HasOne("GeeksDirectory.Data.Entities.GeekProfile", "Profile")
                        .WithMany("Skills")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("GeeksDirectory.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("GeeksDirectory.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GeeksDirectory.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("GeeksDirectory.Data.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
